// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/router/config.proto

package com.xray.app.router;

/**
 * Protobuf type {@code xray.app.router.StrategyLeastLoadConfig}
 */
public final class StrategyLeastLoadConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:xray.app.router.StrategyLeastLoadConfig)
    StrategyLeastLoadConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StrategyLeastLoadConfig.newBuilder() to construct.
  private StrategyLeastLoadConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StrategyLeastLoadConfig() {
    costs_ = java.util.Collections.emptyList();
    baselines_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StrategyLeastLoadConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StrategyLeastLoadConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              costs_ = new java.util.ArrayList<com.xray.app.router.StrategyWeight>();
              mutable_bitField0_ |= 0x00000001;
            }
            costs_.add(
                input.readMessage(com.xray.app.router.StrategyWeight.parser(), extensionRegistry));
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              baselines_ = newLongList();
              mutable_bitField0_ |= 0x00000002;
            }
            baselines_.addLong(input.readInt64());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              baselines_ = newLongList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              baselines_.addLong(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {

            expected_ = input.readInt32();
            break;
          }
          case 40: {

            maxRTT_ = input.readInt64();
            break;
          }
          case 53: {

            tolerance_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        costs_ = java.util.Collections.unmodifiableList(costs_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        baselines_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.xray.app.router.ConfigOuterClass.internal_static_xray_app_router_StrategyLeastLoadConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.xray.app.router.ConfigOuterClass.internal_static_xray_app_router_StrategyLeastLoadConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.xray.app.router.StrategyLeastLoadConfig.class, com.xray.app.router.StrategyLeastLoadConfig.Builder.class);
  }

  public static final int COSTS_FIELD_NUMBER = 2;
  private java.util.List<com.xray.app.router.StrategyWeight> costs_;
  /**
   * <pre>
   * weight settings
   * </pre>
   *
   * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.xray.app.router.StrategyWeight> getCostsList() {
    return costs_;
  }
  /**
   * <pre>
   * weight settings
   * </pre>
   *
   * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.xray.app.router.StrategyWeightOrBuilder> 
      getCostsOrBuilderList() {
    return costs_;
  }
  /**
   * <pre>
   * weight settings
   * </pre>
   *
   * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
   */
  @java.lang.Override
  public int getCostsCount() {
    return costs_.size();
  }
  /**
   * <pre>
   * weight settings
   * </pre>
   *
   * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
   */
  @java.lang.Override
  public com.xray.app.router.StrategyWeight getCosts(int index) {
    return costs_.get(index);
  }
  /**
   * <pre>
   * weight settings
   * </pre>
   *
   * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
   */
  @java.lang.Override
  public com.xray.app.router.StrategyWeightOrBuilder getCostsOrBuilder(
      int index) {
    return costs_.get(index);
  }

  public static final int BASELINES_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.LongList baselines_;
  /**
   * <pre>
   * RTT baselines for selecting, int64 values of time.Duration
   * </pre>
   *
   * <code>repeated int64 baselines = 3;</code>
   * @return A list containing the baselines.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getBaselinesList() {
    return baselines_;
  }
  /**
   * <pre>
   * RTT baselines for selecting, int64 values of time.Duration
   * </pre>
   *
   * <code>repeated int64 baselines = 3;</code>
   * @return The count of baselines.
   */
  public int getBaselinesCount() {
    return baselines_.size();
  }
  /**
   * <pre>
   * RTT baselines for selecting, int64 values of time.Duration
   * </pre>
   *
   * <code>repeated int64 baselines = 3;</code>
   * @param index The index of the element to return.
   * @return The baselines at the given index.
   */
  public long getBaselines(int index) {
    return baselines_.getLong(index);
  }
  private int baselinesMemoizedSerializedSize = -1;

  public static final int EXPECTED_FIELD_NUMBER = 4;
  private int expected_;
  /**
   * <pre>
   * expected nodes count to select
   * </pre>
   *
   * <code>int32 expected = 4;</code>
   * @return The expected.
   */
  @java.lang.Override
  public int getExpected() {
    return expected_;
  }

  public static final int MAXRTT_FIELD_NUMBER = 5;
  private long maxRTT_;
  /**
   * <pre>
   * max acceptable rtt, filter away high delay nodes. default 0
   * </pre>
   *
   * <code>int64 maxRTT = 5;</code>
   * @return The maxRTT.
   */
  @java.lang.Override
  public long getMaxRTT() {
    return maxRTT_;
  }

  public static final int TOLERANCE_FIELD_NUMBER = 6;
  private float tolerance_;
  /**
   * <pre>
   * acceptable failure rate
   * </pre>
   *
   * <code>float tolerance = 6;</code>
   * @return The tolerance.
   */
  @java.lang.Override
  public float getTolerance() {
    return tolerance_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < costs_.size(); i++) {
      output.writeMessage(2, costs_.get(i));
    }
    if (getBaselinesList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(baselinesMemoizedSerializedSize);
    }
    for (int i = 0; i < baselines_.size(); i++) {
      output.writeInt64NoTag(baselines_.getLong(i));
    }
    if (expected_ != 0) {
      output.writeInt32(4, expected_);
    }
    if (maxRTT_ != 0L) {
      output.writeInt64(5, maxRTT_);
    }
    if (tolerance_ != 0F) {
      output.writeFloat(6, tolerance_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < costs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, costs_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < baselines_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(baselines_.getLong(i));
      }
      size += dataSize;
      if (!getBaselinesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      baselinesMemoizedSerializedSize = dataSize;
    }
    if (expected_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, expected_);
    }
    if (maxRTT_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, maxRTT_);
    }
    if (tolerance_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, tolerance_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.xray.app.router.StrategyLeastLoadConfig)) {
      return super.equals(obj);
    }
    com.xray.app.router.StrategyLeastLoadConfig other = (com.xray.app.router.StrategyLeastLoadConfig) obj;

    if (!getCostsList()
        .equals(other.getCostsList())) return false;
    if (!getBaselinesList()
        .equals(other.getBaselinesList())) return false;
    if (getExpected()
        != other.getExpected()) return false;
    if (getMaxRTT()
        != other.getMaxRTT()) return false;
    if (java.lang.Float.floatToIntBits(getTolerance())
        != java.lang.Float.floatToIntBits(
            other.getTolerance())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCostsCount() > 0) {
      hash = (37 * hash) + COSTS_FIELD_NUMBER;
      hash = (53 * hash) + getCostsList().hashCode();
    }
    if (getBaselinesCount() > 0) {
      hash = (37 * hash) + BASELINES_FIELD_NUMBER;
      hash = (53 * hash) + getBaselinesList().hashCode();
    }
    hash = (37 * hash) + EXPECTED_FIELD_NUMBER;
    hash = (53 * hash) + getExpected();
    hash = (37 * hash) + MAXRTT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMaxRTT());
    hash = (37 * hash) + TOLERANCE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTolerance());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xray.app.router.StrategyLeastLoadConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.xray.app.router.StrategyLeastLoadConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code xray.app.router.StrategyLeastLoadConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:xray.app.router.StrategyLeastLoadConfig)
      com.xray.app.router.StrategyLeastLoadConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xray.app.router.ConfigOuterClass.internal_static_xray_app_router_StrategyLeastLoadConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xray.app.router.ConfigOuterClass.internal_static_xray_app_router_StrategyLeastLoadConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.xray.app.router.StrategyLeastLoadConfig.class, com.xray.app.router.StrategyLeastLoadConfig.Builder.class);
    }

    // Construct using com.xray.app.router.StrategyLeastLoadConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCostsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (costsBuilder_ == null) {
        costs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        costsBuilder_.clear();
      }
      baselines_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      expected_ = 0;

      maxRTT_ = 0L;

      tolerance_ = 0F;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.xray.app.router.ConfigOuterClass.internal_static_xray_app_router_StrategyLeastLoadConfig_descriptor;
    }

    @java.lang.Override
    public com.xray.app.router.StrategyLeastLoadConfig getDefaultInstanceForType() {
      return com.xray.app.router.StrategyLeastLoadConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.xray.app.router.StrategyLeastLoadConfig build() {
      com.xray.app.router.StrategyLeastLoadConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.xray.app.router.StrategyLeastLoadConfig buildPartial() {
      com.xray.app.router.StrategyLeastLoadConfig result = new com.xray.app.router.StrategyLeastLoadConfig(this);
      int from_bitField0_ = bitField0_;
      if (costsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          costs_ = java.util.Collections.unmodifiableList(costs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.costs_ = costs_;
      } else {
        result.costs_ = costsBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        baselines_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.baselines_ = baselines_;
      result.expected_ = expected_;
      result.maxRTT_ = maxRTT_;
      result.tolerance_ = tolerance_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.xray.app.router.StrategyLeastLoadConfig) {
        return mergeFrom((com.xray.app.router.StrategyLeastLoadConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.xray.app.router.StrategyLeastLoadConfig other) {
      if (other == com.xray.app.router.StrategyLeastLoadConfig.getDefaultInstance()) return this;
      if (costsBuilder_ == null) {
        if (!other.costs_.isEmpty()) {
          if (costs_.isEmpty()) {
            costs_ = other.costs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCostsIsMutable();
            costs_.addAll(other.costs_);
          }
          onChanged();
        }
      } else {
        if (!other.costs_.isEmpty()) {
          if (costsBuilder_.isEmpty()) {
            costsBuilder_.dispose();
            costsBuilder_ = null;
            costs_ = other.costs_;
            bitField0_ = (bitField0_ & ~0x00000001);
            costsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCostsFieldBuilder() : null;
          } else {
            costsBuilder_.addAllMessages(other.costs_);
          }
        }
      }
      if (!other.baselines_.isEmpty()) {
        if (baselines_.isEmpty()) {
          baselines_ = other.baselines_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureBaselinesIsMutable();
          baselines_.addAll(other.baselines_);
        }
        onChanged();
      }
      if (other.getExpected() != 0) {
        setExpected(other.getExpected());
      }
      if (other.getMaxRTT() != 0L) {
        setMaxRTT(other.getMaxRTT());
      }
      if (other.getTolerance() != 0F) {
        setTolerance(other.getTolerance());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.xray.app.router.StrategyLeastLoadConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.xray.app.router.StrategyLeastLoadConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.xray.app.router.StrategyWeight> costs_ =
      java.util.Collections.emptyList();
    private void ensureCostsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        costs_ = new java.util.ArrayList<com.xray.app.router.StrategyWeight>(costs_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.xray.app.router.StrategyWeight, com.xray.app.router.StrategyWeight.Builder, com.xray.app.router.StrategyWeightOrBuilder> costsBuilder_;

    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public java.util.List<com.xray.app.router.StrategyWeight> getCostsList() {
      if (costsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(costs_);
      } else {
        return costsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public int getCostsCount() {
      if (costsBuilder_ == null) {
        return costs_.size();
      } else {
        return costsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public com.xray.app.router.StrategyWeight getCosts(int index) {
      if (costsBuilder_ == null) {
        return costs_.get(index);
      } else {
        return costsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder setCosts(
        int index, com.xray.app.router.StrategyWeight value) {
      if (costsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCostsIsMutable();
        costs_.set(index, value);
        onChanged();
      } else {
        costsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder setCosts(
        int index, com.xray.app.router.StrategyWeight.Builder builderForValue) {
      if (costsBuilder_ == null) {
        ensureCostsIsMutable();
        costs_.set(index, builderForValue.build());
        onChanged();
      } else {
        costsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder addCosts(com.xray.app.router.StrategyWeight value) {
      if (costsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCostsIsMutable();
        costs_.add(value);
        onChanged();
      } else {
        costsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder addCosts(
        int index, com.xray.app.router.StrategyWeight value) {
      if (costsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCostsIsMutable();
        costs_.add(index, value);
        onChanged();
      } else {
        costsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder addCosts(
        com.xray.app.router.StrategyWeight.Builder builderForValue) {
      if (costsBuilder_ == null) {
        ensureCostsIsMutable();
        costs_.add(builderForValue.build());
        onChanged();
      } else {
        costsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder addCosts(
        int index, com.xray.app.router.StrategyWeight.Builder builderForValue) {
      if (costsBuilder_ == null) {
        ensureCostsIsMutable();
        costs_.add(index, builderForValue.build());
        onChanged();
      } else {
        costsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder addAllCosts(
        java.lang.Iterable<? extends com.xray.app.router.StrategyWeight> values) {
      if (costsBuilder_ == null) {
        ensureCostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, costs_);
        onChanged();
      } else {
        costsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder clearCosts() {
      if (costsBuilder_ == null) {
        costs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        costsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public Builder removeCosts(int index) {
      if (costsBuilder_ == null) {
        ensureCostsIsMutable();
        costs_.remove(index);
        onChanged();
      } else {
        costsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public com.xray.app.router.StrategyWeight.Builder getCostsBuilder(
        int index) {
      return getCostsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public com.xray.app.router.StrategyWeightOrBuilder getCostsOrBuilder(
        int index) {
      if (costsBuilder_ == null) {
        return costs_.get(index);  } else {
        return costsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public java.util.List<? extends com.xray.app.router.StrategyWeightOrBuilder> 
         getCostsOrBuilderList() {
      if (costsBuilder_ != null) {
        return costsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(costs_);
      }
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public com.xray.app.router.StrategyWeight.Builder addCostsBuilder() {
      return getCostsFieldBuilder().addBuilder(
          com.xray.app.router.StrategyWeight.getDefaultInstance());
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public com.xray.app.router.StrategyWeight.Builder addCostsBuilder(
        int index) {
      return getCostsFieldBuilder().addBuilder(
          index, com.xray.app.router.StrategyWeight.getDefaultInstance());
    }
    /**
     * <pre>
     * weight settings
     * </pre>
     *
     * <code>repeated .xray.app.router.StrategyWeight costs = 2;</code>
     */
    public java.util.List<com.xray.app.router.StrategyWeight.Builder> 
         getCostsBuilderList() {
      return getCostsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.xray.app.router.StrategyWeight, com.xray.app.router.StrategyWeight.Builder, com.xray.app.router.StrategyWeightOrBuilder> 
        getCostsFieldBuilder() {
      if (costsBuilder_ == null) {
        costsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.xray.app.router.StrategyWeight, com.xray.app.router.StrategyWeight.Builder, com.xray.app.router.StrategyWeightOrBuilder>(
                costs_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        costs_ = null;
      }
      return costsBuilder_;
    }

    private com.google.protobuf.Internal.LongList baselines_ = emptyLongList();
    private void ensureBaselinesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        baselines_ = mutableCopy(baselines_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @return A list containing the baselines.
     */
    public java.util.List<java.lang.Long>
        getBaselinesList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(baselines_) : baselines_;
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @return The count of baselines.
     */
    public int getBaselinesCount() {
      return baselines_.size();
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @param index The index of the element to return.
     * @return The baselines at the given index.
     */
    public long getBaselines(int index) {
      return baselines_.getLong(index);
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @param index The index to set the value at.
     * @param value The baselines to set.
     * @return This builder for chaining.
     */
    public Builder setBaselines(
        int index, long value) {
      ensureBaselinesIsMutable();
      baselines_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @param value The baselines to add.
     * @return This builder for chaining.
     */
    public Builder addBaselines(long value) {
      ensureBaselinesIsMutable();
      baselines_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @param values The baselines to add.
     * @return This builder for chaining.
     */
    public Builder addAllBaselines(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureBaselinesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, baselines_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RTT baselines for selecting, int64 values of time.Duration
     * </pre>
     *
     * <code>repeated int64 baselines = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearBaselines() {
      baselines_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private int expected_ ;
    /**
     * <pre>
     * expected nodes count to select
     * </pre>
     *
     * <code>int32 expected = 4;</code>
     * @return The expected.
     */
    @java.lang.Override
    public int getExpected() {
      return expected_;
    }
    /**
     * <pre>
     * expected nodes count to select
     * </pre>
     *
     * <code>int32 expected = 4;</code>
     * @param value The expected to set.
     * @return This builder for chaining.
     */
    public Builder setExpected(int value) {
      
      expected_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * expected nodes count to select
     * </pre>
     *
     * <code>int32 expected = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearExpected() {
      
      expected_ = 0;
      onChanged();
      return this;
    }

    private long maxRTT_ ;
    /**
     * <pre>
     * max acceptable rtt, filter away high delay nodes. default 0
     * </pre>
     *
     * <code>int64 maxRTT = 5;</code>
     * @return The maxRTT.
     */
    @java.lang.Override
    public long getMaxRTT() {
      return maxRTT_;
    }
    /**
     * <pre>
     * max acceptable rtt, filter away high delay nodes. default 0
     * </pre>
     *
     * <code>int64 maxRTT = 5;</code>
     * @param value The maxRTT to set.
     * @return This builder for chaining.
     */
    public Builder setMaxRTT(long value) {
      
      maxRTT_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * max acceptable rtt, filter away high delay nodes. default 0
     * </pre>
     *
     * <code>int64 maxRTT = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxRTT() {
      
      maxRTT_ = 0L;
      onChanged();
      return this;
    }

    private float tolerance_ ;
    /**
     * <pre>
     * acceptable failure rate
     * </pre>
     *
     * <code>float tolerance = 6;</code>
     * @return The tolerance.
     */
    @java.lang.Override
    public float getTolerance() {
      return tolerance_;
    }
    /**
     * <pre>
     * acceptable failure rate
     * </pre>
     *
     * <code>float tolerance = 6;</code>
     * @param value The tolerance to set.
     * @return This builder for chaining.
     */
    public Builder setTolerance(float value) {
      
      tolerance_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * acceptable failure rate
     * </pre>
     *
     * <code>float tolerance = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTolerance() {
      
      tolerance_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:xray.app.router.StrategyLeastLoadConfig)
  }

  // @@protoc_insertion_point(class_scope:xray.app.router.StrategyLeastLoadConfig)
  private static final com.xray.app.router.StrategyLeastLoadConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.xray.app.router.StrategyLeastLoadConfig();
  }

  public static com.xray.app.router.StrategyLeastLoadConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StrategyLeastLoadConfig>
      PARSER = new com.google.protobuf.AbstractParser<StrategyLeastLoadConfig>() {
    @java.lang.Override
    public StrategyLeastLoadConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StrategyLeastLoadConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StrategyLeastLoadConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StrategyLeastLoadConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.xray.app.router.StrategyLeastLoadConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

