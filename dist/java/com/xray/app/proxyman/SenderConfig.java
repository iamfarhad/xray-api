// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/proxyman/config.proto

package com.xray.app.proxyman;

/**
 * Protobuf type {@code xray.app.proxyman.SenderConfig}
 */
public final class SenderConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:xray.app.proxyman.SenderConfig)
    SenderConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SenderConfig.newBuilder() to construct.
  private SenderConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SenderConfig() {
    viaCidr_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SenderConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SenderConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.xray.common.net.IPOrDomain.Builder subBuilder = null;
            if (via_ != null) {
              subBuilder = via_.toBuilder();
            }
            via_ = input.readMessage(com.xray.common.net.IPOrDomain.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(via_);
              via_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.xray.transport.internet.StreamConfig.Builder subBuilder = null;
            if (streamSettings_ != null) {
              subBuilder = streamSettings_.toBuilder();
            }
            streamSettings_ = input.readMessage(com.xray.transport.internet.StreamConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(streamSettings_);
              streamSettings_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.xray.transport.internet.ProxyConfig.Builder subBuilder = null;
            if (proxySettings_ != null) {
              subBuilder = proxySettings_.toBuilder();
            }
            proxySettings_ = input.readMessage(com.xray.transport.internet.ProxyConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(proxySettings_);
              proxySettings_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.xray.app.proxyman.MultiplexingConfig.Builder subBuilder = null;
            if (multiplexSettings_ != null) {
              subBuilder = multiplexSettings_.toBuilder();
            }
            multiplexSettings_ = input.readMessage(com.xray.app.proxyman.MultiplexingConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(multiplexSettings_);
              multiplexSettings_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            viaCidr_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.xray.app.proxyman.Config.internal_static_xray_app_proxyman_SenderConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.xray.app.proxyman.Config.internal_static_xray_app_proxyman_SenderConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.xray.app.proxyman.SenderConfig.class, com.xray.app.proxyman.SenderConfig.Builder.class);
  }

  public static final int VIA_FIELD_NUMBER = 1;
  private com.xray.common.net.IPOrDomain via_;
  /**
   * <pre>
   * Send traffic through the given IP. Only IP is allowed.
   * </pre>
   *
   * <code>.xray.common.net.IPOrDomain via = 1;</code>
   * @return Whether the via field is set.
   */
  @java.lang.Override
  public boolean hasVia() {
    return via_ != null;
  }
  /**
   * <pre>
   * Send traffic through the given IP. Only IP is allowed.
   * </pre>
   *
   * <code>.xray.common.net.IPOrDomain via = 1;</code>
   * @return The via.
   */
  @java.lang.Override
  public com.xray.common.net.IPOrDomain getVia() {
    return via_ == null ? com.xray.common.net.IPOrDomain.getDefaultInstance() : via_;
  }
  /**
   * <pre>
   * Send traffic through the given IP. Only IP is allowed.
   * </pre>
   *
   * <code>.xray.common.net.IPOrDomain via = 1;</code>
   */
  @java.lang.Override
  public com.xray.common.net.IPOrDomainOrBuilder getViaOrBuilder() {
    return getVia();
  }

  public static final int STREAM_SETTINGS_FIELD_NUMBER = 2;
  private com.xray.transport.internet.StreamConfig streamSettings_;
  /**
   * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
   * @return Whether the streamSettings field is set.
   */
  @java.lang.Override
  public boolean hasStreamSettings() {
    return streamSettings_ != null;
  }
  /**
   * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
   * @return The streamSettings.
   */
  @java.lang.Override
  public com.xray.transport.internet.StreamConfig getStreamSettings() {
    return streamSettings_ == null ? com.xray.transport.internet.StreamConfig.getDefaultInstance() : streamSettings_;
  }
  /**
   * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
   */
  @java.lang.Override
  public com.xray.transport.internet.StreamConfigOrBuilder getStreamSettingsOrBuilder() {
    return getStreamSettings();
  }

  public static final int PROXY_SETTINGS_FIELD_NUMBER = 3;
  private com.xray.transport.internet.ProxyConfig proxySettings_;
  /**
   * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
   * @return Whether the proxySettings field is set.
   */
  @java.lang.Override
  public boolean hasProxySettings() {
    return proxySettings_ != null;
  }
  /**
   * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
   * @return The proxySettings.
   */
  @java.lang.Override
  public com.xray.transport.internet.ProxyConfig getProxySettings() {
    return proxySettings_ == null ? com.xray.transport.internet.ProxyConfig.getDefaultInstance() : proxySettings_;
  }
  /**
   * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
   */
  @java.lang.Override
  public com.xray.transport.internet.ProxyConfigOrBuilder getProxySettingsOrBuilder() {
    return getProxySettings();
  }

  public static final int MULTIPLEX_SETTINGS_FIELD_NUMBER = 4;
  private com.xray.app.proxyman.MultiplexingConfig multiplexSettings_;
  /**
   * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
   * @return Whether the multiplexSettings field is set.
   */
  @java.lang.Override
  public boolean hasMultiplexSettings() {
    return multiplexSettings_ != null;
  }
  /**
   * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
   * @return The multiplexSettings.
   */
  @java.lang.Override
  public com.xray.app.proxyman.MultiplexingConfig getMultiplexSettings() {
    return multiplexSettings_ == null ? com.xray.app.proxyman.MultiplexingConfig.getDefaultInstance() : multiplexSettings_;
  }
  /**
   * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
   */
  @java.lang.Override
  public com.xray.app.proxyman.MultiplexingConfigOrBuilder getMultiplexSettingsOrBuilder() {
    return getMultiplexSettings();
  }

  public static final int VIA_CIDR_FIELD_NUMBER = 5;
  private volatile java.lang.Object viaCidr_;
  /**
   * <code>string via_cidr = 5;</code>
   * @return The viaCidr.
   */
  @java.lang.Override
  public java.lang.String getViaCidr() {
    java.lang.Object ref = viaCidr_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      viaCidr_ = s;
      return s;
    }
  }
  /**
   * <code>string via_cidr = 5;</code>
   * @return The bytes for viaCidr.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getViaCidrBytes() {
    java.lang.Object ref = viaCidr_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      viaCidr_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (via_ != null) {
      output.writeMessage(1, getVia());
    }
    if (streamSettings_ != null) {
      output.writeMessage(2, getStreamSettings());
    }
    if (proxySettings_ != null) {
      output.writeMessage(3, getProxySettings());
    }
    if (multiplexSettings_ != null) {
      output.writeMessage(4, getMultiplexSettings());
    }
    if (!getViaCidrBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, viaCidr_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (via_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getVia());
    }
    if (streamSettings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getStreamSettings());
    }
    if (proxySettings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getProxySettings());
    }
    if (multiplexSettings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMultiplexSettings());
    }
    if (!getViaCidrBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, viaCidr_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.xray.app.proxyman.SenderConfig)) {
      return super.equals(obj);
    }
    com.xray.app.proxyman.SenderConfig other = (com.xray.app.proxyman.SenderConfig) obj;

    if (hasVia() != other.hasVia()) return false;
    if (hasVia()) {
      if (!getVia()
          .equals(other.getVia())) return false;
    }
    if (hasStreamSettings() != other.hasStreamSettings()) return false;
    if (hasStreamSettings()) {
      if (!getStreamSettings()
          .equals(other.getStreamSettings())) return false;
    }
    if (hasProxySettings() != other.hasProxySettings()) return false;
    if (hasProxySettings()) {
      if (!getProxySettings()
          .equals(other.getProxySettings())) return false;
    }
    if (hasMultiplexSettings() != other.hasMultiplexSettings()) return false;
    if (hasMultiplexSettings()) {
      if (!getMultiplexSettings()
          .equals(other.getMultiplexSettings())) return false;
    }
    if (!getViaCidr()
        .equals(other.getViaCidr())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasVia()) {
      hash = (37 * hash) + VIA_FIELD_NUMBER;
      hash = (53 * hash) + getVia().hashCode();
    }
    if (hasStreamSettings()) {
      hash = (37 * hash) + STREAM_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getStreamSettings().hashCode();
    }
    if (hasProxySettings()) {
      hash = (37 * hash) + PROXY_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getProxySettings().hashCode();
    }
    if (hasMultiplexSettings()) {
      hash = (37 * hash) + MULTIPLEX_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getMultiplexSettings().hashCode();
    }
    hash = (37 * hash) + VIA_CIDR_FIELD_NUMBER;
    hash = (53 * hash) + getViaCidr().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.xray.app.proxyman.SenderConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xray.app.proxyman.SenderConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.xray.app.proxyman.SenderConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.xray.app.proxyman.SenderConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.xray.app.proxyman.SenderConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code xray.app.proxyman.SenderConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:xray.app.proxyman.SenderConfig)
      com.xray.app.proxyman.SenderConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.xray.app.proxyman.Config.internal_static_xray_app_proxyman_SenderConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.xray.app.proxyman.Config.internal_static_xray_app_proxyman_SenderConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.xray.app.proxyman.SenderConfig.class, com.xray.app.proxyman.SenderConfig.Builder.class);
    }

    // Construct using com.xray.app.proxyman.SenderConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (viaBuilder_ == null) {
        via_ = null;
      } else {
        via_ = null;
        viaBuilder_ = null;
      }
      if (streamSettingsBuilder_ == null) {
        streamSettings_ = null;
      } else {
        streamSettings_ = null;
        streamSettingsBuilder_ = null;
      }
      if (proxySettingsBuilder_ == null) {
        proxySettings_ = null;
      } else {
        proxySettings_ = null;
        proxySettingsBuilder_ = null;
      }
      if (multiplexSettingsBuilder_ == null) {
        multiplexSettings_ = null;
      } else {
        multiplexSettings_ = null;
        multiplexSettingsBuilder_ = null;
      }
      viaCidr_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.xray.app.proxyman.Config.internal_static_xray_app_proxyman_SenderConfig_descriptor;
    }

    @java.lang.Override
    public com.xray.app.proxyman.SenderConfig getDefaultInstanceForType() {
      return com.xray.app.proxyman.SenderConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.xray.app.proxyman.SenderConfig build() {
      com.xray.app.proxyman.SenderConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.xray.app.proxyman.SenderConfig buildPartial() {
      com.xray.app.proxyman.SenderConfig result = new com.xray.app.proxyman.SenderConfig(this);
      if (viaBuilder_ == null) {
        result.via_ = via_;
      } else {
        result.via_ = viaBuilder_.build();
      }
      if (streamSettingsBuilder_ == null) {
        result.streamSettings_ = streamSettings_;
      } else {
        result.streamSettings_ = streamSettingsBuilder_.build();
      }
      if (proxySettingsBuilder_ == null) {
        result.proxySettings_ = proxySettings_;
      } else {
        result.proxySettings_ = proxySettingsBuilder_.build();
      }
      if (multiplexSettingsBuilder_ == null) {
        result.multiplexSettings_ = multiplexSettings_;
      } else {
        result.multiplexSettings_ = multiplexSettingsBuilder_.build();
      }
      result.viaCidr_ = viaCidr_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.xray.app.proxyman.SenderConfig) {
        return mergeFrom((com.xray.app.proxyman.SenderConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.xray.app.proxyman.SenderConfig other) {
      if (other == com.xray.app.proxyman.SenderConfig.getDefaultInstance()) return this;
      if (other.hasVia()) {
        mergeVia(other.getVia());
      }
      if (other.hasStreamSettings()) {
        mergeStreamSettings(other.getStreamSettings());
      }
      if (other.hasProxySettings()) {
        mergeProxySettings(other.getProxySettings());
      }
      if (other.hasMultiplexSettings()) {
        mergeMultiplexSettings(other.getMultiplexSettings());
      }
      if (!other.getViaCidr().isEmpty()) {
        viaCidr_ = other.viaCidr_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.xray.app.proxyman.SenderConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.xray.app.proxyman.SenderConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.xray.common.net.IPOrDomain via_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.common.net.IPOrDomain, com.xray.common.net.IPOrDomain.Builder, com.xray.common.net.IPOrDomainOrBuilder> viaBuilder_;
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     * @return Whether the via field is set.
     */
    public boolean hasVia() {
      return viaBuilder_ != null || via_ != null;
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     * @return The via.
     */
    public com.xray.common.net.IPOrDomain getVia() {
      if (viaBuilder_ == null) {
        return via_ == null ? com.xray.common.net.IPOrDomain.getDefaultInstance() : via_;
      } else {
        return viaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    public Builder setVia(com.xray.common.net.IPOrDomain value) {
      if (viaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        via_ = value;
        onChanged();
      } else {
        viaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    public Builder setVia(
        com.xray.common.net.IPOrDomain.Builder builderForValue) {
      if (viaBuilder_ == null) {
        via_ = builderForValue.build();
        onChanged();
      } else {
        viaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    public Builder mergeVia(com.xray.common.net.IPOrDomain value) {
      if (viaBuilder_ == null) {
        if (via_ != null) {
          via_ =
            com.xray.common.net.IPOrDomain.newBuilder(via_).mergeFrom(value).buildPartial();
        } else {
          via_ = value;
        }
        onChanged();
      } else {
        viaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    public Builder clearVia() {
      if (viaBuilder_ == null) {
        via_ = null;
        onChanged();
      } else {
        via_ = null;
        viaBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    public com.xray.common.net.IPOrDomain.Builder getViaBuilder() {
      
      onChanged();
      return getViaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    public com.xray.common.net.IPOrDomainOrBuilder getViaOrBuilder() {
      if (viaBuilder_ != null) {
        return viaBuilder_.getMessageOrBuilder();
      } else {
        return via_ == null ?
            com.xray.common.net.IPOrDomain.getDefaultInstance() : via_;
      }
    }
    /**
     * <pre>
     * Send traffic through the given IP. Only IP is allowed.
     * </pre>
     *
     * <code>.xray.common.net.IPOrDomain via = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.common.net.IPOrDomain, com.xray.common.net.IPOrDomain.Builder, com.xray.common.net.IPOrDomainOrBuilder> 
        getViaFieldBuilder() {
      if (viaBuilder_ == null) {
        viaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.xray.common.net.IPOrDomain, com.xray.common.net.IPOrDomain.Builder, com.xray.common.net.IPOrDomainOrBuilder>(
                getVia(),
                getParentForChildren(),
                isClean());
        via_ = null;
      }
      return viaBuilder_;
    }

    private com.xray.transport.internet.StreamConfig streamSettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.transport.internet.StreamConfig, com.xray.transport.internet.StreamConfig.Builder, com.xray.transport.internet.StreamConfigOrBuilder> streamSettingsBuilder_;
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     * @return Whether the streamSettings field is set.
     */
    public boolean hasStreamSettings() {
      return streamSettingsBuilder_ != null || streamSettings_ != null;
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     * @return The streamSettings.
     */
    public com.xray.transport.internet.StreamConfig getStreamSettings() {
      if (streamSettingsBuilder_ == null) {
        return streamSettings_ == null ? com.xray.transport.internet.StreamConfig.getDefaultInstance() : streamSettings_;
      } else {
        return streamSettingsBuilder_.getMessage();
      }
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    public Builder setStreamSettings(com.xray.transport.internet.StreamConfig value) {
      if (streamSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        streamSettings_ = value;
        onChanged();
      } else {
        streamSettingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    public Builder setStreamSettings(
        com.xray.transport.internet.StreamConfig.Builder builderForValue) {
      if (streamSettingsBuilder_ == null) {
        streamSettings_ = builderForValue.build();
        onChanged();
      } else {
        streamSettingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    public Builder mergeStreamSettings(com.xray.transport.internet.StreamConfig value) {
      if (streamSettingsBuilder_ == null) {
        if (streamSettings_ != null) {
          streamSettings_ =
            com.xray.transport.internet.StreamConfig.newBuilder(streamSettings_).mergeFrom(value).buildPartial();
        } else {
          streamSettings_ = value;
        }
        onChanged();
      } else {
        streamSettingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    public Builder clearStreamSettings() {
      if (streamSettingsBuilder_ == null) {
        streamSettings_ = null;
        onChanged();
      } else {
        streamSettings_ = null;
        streamSettingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    public com.xray.transport.internet.StreamConfig.Builder getStreamSettingsBuilder() {
      
      onChanged();
      return getStreamSettingsFieldBuilder().getBuilder();
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    public com.xray.transport.internet.StreamConfigOrBuilder getStreamSettingsOrBuilder() {
      if (streamSettingsBuilder_ != null) {
        return streamSettingsBuilder_.getMessageOrBuilder();
      } else {
        return streamSettings_ == null ?
            com.xray.transport.internet.StreamConfig.getDefaultInstance() : streamSettings_;
      }
    }
    /**
     * <code>.xray.transport.internet.StreamConfig stream_settings = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.transport.internet.StreamConfig, com.xray.transport.internet.StreamConfig.Builder, com.xray.transport.internet.StreamConfigOrBuilder> 
        getStreamSettingsFieldBuilder() {
      if (streamSettingsBuilder_ == null) {
        streamSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.xray.transport.internet.StreamConfig, com.xray.transport.internet.StreamConfig.Builder, com.xray.transport.internet.StreamConfigOrBuilder>(
                getStreamSettings(),
                getParentForChildren(),
                isClean());
        streamSettings_ = null;
      }
      return streamSettingsBuilder_;
    }

    private com.xray.transport.internet.ProxyConfig proxySettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.transport.internet.ProxyConfig, com.xray.transport.internet.ProxyConfig.Builder, com.xray.transport.internet.ProxyConfigOrBuilder> proxySettingsBuilder_;
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     * @return Whether the proxySettings field is set.
     */
    public boolean hasProxySettings() {
      return proxySettingsBuilder_ != null || proxySettings_ != null;
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     * @return The proxySettings.
     */
    public com.xray.transport.internet.ProxyConfig getProxySettings() {
      if (proxySettingsBuilder_ == null) {
        return proxySettings_ == null ? com.xray.transport.internet.ProxyConfig.getDefaultInstance() : proxySettings_;
      } else {
        return proxySettingsBuilder_.getMessage();
      }
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    public Builder setProxySettings(com.xray.transport.internet.ProxyConfig value) {
      if (proxySettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        proxySettings_ = value;
        onChanged();
      } else {
        proxySettingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    public Builder setProxySettings(
        com.xray.transport.internet.ProxyConfig.Builder builderForValue) {
      if (proxySettingsBuilder_ == null) {
        proxySettings_ = builderForValue.build();
        onChanged();
      } else {
        proxySettingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    public Builder mergeProxySettings(com.xray.transport.internet.ProxyConfig value) {
      if (proxySettingsBuilder_ == null) {
        if (proxySettings_ != null) {
          proxySettings_ =
            com.xray.transport.internet.ProxyConfig.newBuilder(proxySettings_).mergeFrom(value).buildPartial();
        } else {
          proxySettings_ = value;
        }
        onChanged();
      } else {
        proxySettingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    public Builder clearProxySettings() {
      if (proxySettingsBuilder_ == null) {
        proxySettings_ = null;
        onChanged();
      } else {
        proxySettings_ = null;
        proxySettingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    public com.xray.transport.internet.ProxyConfig.Builder getProxySettingsBuilder() {
      
      onChanged();
      return getProxySettingsFieldBuilder().getBuilder();
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    public com.xray.transport.internet.ProxyConfigOrBuilder getProxySettingsOrBuilder() {
      if (proxySettingsBuilder_ != null) {
        return proxySettingsBuilder_.getMessageOrBuilder();
      } else {
        return proxySettings_ == null ?
            com.xray.transport.internet.ProxyConfig.getDefaultInstance() : proxySettings_;
      }
    }
    /**
     * <code>.xray.transport.internet.ProxyConfig proxy_settings = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.transport.internet.ProxyConfig, com.xray.transport.internet.ProxyConfig.Builder, com.xray.transport.internet.ProxyConfigOrBuilder> 
        getProxySettingsFieldBuilder() {
      if (proxySettingsBuilder_ == null) {
        proxySettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.xray.transport.internet.ProxyConfig, com.xray.transport.internet.ProxyConfig.Builder, com.xray.transport.internet.ProxyConfigOrBuilder>(
                getProxySettings(),
                getParentForChildren(),
                isClean());
        proxySettings_ = null;
      }
      return proxySettingsBuilder_;
    }

    private com.xray.app.proxyman.MultiplexingConfig multiplexSettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.app.proxyman.MultiplexingConfig, com.xray.app.proxyman.MultiplexingConfig.Builder, com.xray.app.proxyman.MultiplexingConfigOrBuilder> multiplexSettingsBuilder_;
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     * @return Whether the multiplexSettings field is set.
     */
    public boolean hasMultiplexSettings() {
      return multiplexSettingsBuilder_ != null || multiplexSettings_ != null;
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     * @return The multiplexSettings.
     */
    public com.xray.app.proxyman.MultiplexingConfig getMultiplexSettings() {
      if (multiplexSettingsBuilder_ == null) {
        return multiplexSettings_ == null ? com.xray.app.proxyman.MultiplexingConfig.getDefaultInstance() : multiplexSettings_;
      } else {
        return multiplexSettingsBuilder_.getMessage();
      }
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    public Builder setMultiplexSettings(com.xray.app.proxyman.MultiplexingConfig value) {
      if (multiplexSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        multiplexSettings_ = value;
        onChanged();
      } else {
        multiplexSettingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    public Builder setMultiplexSettings(
        com.xray.app.proxyman.MultiplexingConfig.Builder builderForValue) {
      if (multiplexSettingsBuilder_ == null) {
        multiplexSettings_ = builderForValue.build();
        onChanged();
      } else {
        multiplexSettingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    public Builder mergeMultiplexSettings(com.xray.app.proxyman.MultiplexingConfig value) {
      if (multiplexSettingsBuilder_ == null) {
        if (multiplexSettings_ != null) {
          multiplexSettings_ =
            com.xray.app.proxyman.MultiplexingConfig.newBuilder(multiplexSettings_).mergeFrom(value).buildPartial();
        } else {
          multiplexSettings_ = value;
        }
        onChanged();
      } else {
        multiplexSettingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    public Builder clearMultiplexSettings() {
      if (multiplexSettingsBuilder_ == null) {
        multiplexSettings_ = null;
        onChanged();
      } else {
        multiplexSettings_ = null;
        multiplexSettingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    public com.xray.app.proxyman.MultiplexingConfig.Builder getMultiplexSettingsBuilder() {
      
      onChanged();
      return getMultiplexSettingsFieldBuilder().getBuilder();
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    public com.xray.app.proxyman.MultiplexingConfigOrBuilder getMultiplexSettingsOrBuilder() {
      if (multiplexSettingsBuilder_ != null) {
        return multiplexSettingsBuilder_.getMessageOrBuilder();
      } else {
        return multiplexSettings_ == null ?
            com.xray.app.proxyman.MultiplexingConfig.getDefaultInstance() : multiplexSettings_;
      }
    }
    /**
     * <code>.xray.app.proxyman.MultiplexingConfig multiplex_settings = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.xray.app.proxyman.MultiplexingConfig, com.xray.app.proxyman.MultiplexingConfig.Builder, com.xray.app.proxyman.MultiplexingConfigOrBuilder> 
        getMultiplexSettingsFieldBuilder() {
      if (multiplexSettingsBuilder_ == null) {
        multiplexSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.xray.app.proxyman.MultiplexingConfig, com.xray.app.proxyman.MultiplexingConfig.Builder, com.xray.app.proxyman.MultiplexingConfigOrBuilder>(
                getMultiplexSettings(),
                getParentForChildren(),
                isClean());
        multiplexSettings_ = null;
      }
      return multiplexSettingsBuilder_;
    }

    private java.lang.Object viaCidr_ = "";
    /**
     * <code>string via_cidr = 5;</code>
     * @return The viaCidr.
     */
    public java.lang.String getViaCidr() {
      java.lang.Object ref = viaCidr_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        viaCidr_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string via_cidr = 5;</code>
     * @return The bytes for viaCidr.
     */
    public com.google.protobuf.ByteString
        getViaCidrBytes() {
      java.lang.Object ref = viaCidr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        viaCidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string via_cidr = 5;</code>
     * @param value The viaCidr to set.
     * @return This builder for chaining.
     */
    public Builder setViaCidr(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      viaCidr_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string via_cidr = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearViaCidr() {
      
      viaCidr_ = getDefaultInstance().getViaCidr();
      onChanged();
      return this;
    }
    /**
     * <code>string via_cidr = 5;</code>
     * @param value The bytes for viaCidr to set.
     * @return This builder for chaining.
     */
    public Builder setViaCidrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      viaCidr_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:xray.app.proxyman.SenderConfig)
  }

  // @@protoc_insertion_point(class_scope:xray.app.proxyman.SenderConfig)
  private static final com.xray.app.proxyman.SenderConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.xray.app.proxyman.SenderConfig();
  }

  public static com.xray.app.proxyman.SenderConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SenderConfig>
      PARSER = new com.google.protobuf.AbstractParser<SenderConfig>() {
    @java.lang.Override
    public SenderConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SenderConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SenderConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SenderConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.xray.app.proxyman.SenderConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

