name: Compile proto files

on:
  workflow_dispatch:
    inputs:
      compile_python:
        required: true
        type: boolean
        description: 'python compiling'
        
      compile_php:
        required: true
        type: boolean
        description: 'php compiling'
        
      compile_java:
        required: true
        type: boolean
        description: 'java compiling'
        
      commit_python:
        required: true
        type: boolean
        description: 'python committing'
        
      commit_php:
        required: true
        type: boolean
        description: 'php committing'
        
      commit_java:
        required: true
        type: boolean
        description: 'java committing'

jobs:
  Python:
    if: ${{ github.event.inputs.compile_python == 'true' }}
    name: Compile proto files to python source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v25.3/protoc-25.3-linux-x86_64.zip
          unzip protoc-25.3-linux-x86_64.zip -d $HOME/protoc
          export PATH="$HOME/protoc/bin:$PATH"
          

      - name: Install dependencies
        run: |
          pip install grpcio grpcio-tools

      - name: Compile
        run: |
          python compile.py python

      - name: Tree
        run: |
          tree

      - name: Commit and Push Changes
        if: ${{ github.event.inputs.commit_python == 'true' }}
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "compile: proto files compiled"
          git push

  Php:
    if: ${{ github.event.inputs.compile_php == 'true' }}
    name: Compile proto files to php source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PHP gRPC plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y php php-pear
          sudo pecl install grpc

      - name: Install composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer

      - name: Install PHP dependencies (grpc_php_plugin)
        run: |
          composer require grpc/grpc

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v25.3/protoc-25.3-linux-x86_64.zip
          unzip protoc-25.3-linux-x86_64.zip -d $HOME/protoc
          export PATH="$HOME/protoc/bin:$PATH"

     - name:  Install Pre-requisites
        run: |
          cd $HOME
          mkdir grpc
          cd grpc
          wget https://github.com/XVGuardian/grpc-compiled/releases/download/v1.61.0/local_directory.zip
          unzip local_directory.zip
          tree .local
          export PATH="$HOME/grpc/.local/bin:$PATH"

      - name: Compile
        run: |
          export PATH="$HOME/grpc/.local/bin:$PATH"
          python compile.py php

      - name: Tree
        run: |
          tree

      - name: Commit and Push Changes
        if: ${{ github.event.inputs.commit_php == 'true' }}
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "compile: proto files compiled"
          git push

  Java:
    if: ${{ github.event.inputs.compile_java == 'true' }}
    name: Compile proto files to java source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Amazon Corretto 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Setup Maven project
        run: |
          mkdir -p grpc-java-project
          cd grpc-java-project
          mvn archetype:generate -DgroupId=com.example.grpc -DartifactId=grpc-java -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

      - name: Add gRPC Java dependencies to Maven
        run: |
          cd grpc-java-project
          echo '<project xmlns="http://maven.apache.org/POM/4.0.0"' > pom.xml
          echo '    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"' >> pom.xml
          echo '    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">' >> pom.xml
          echo '    <modelVersion>4.0.0</modelVersion>' >> pom.xml
          echo '    <groupId>com.example.grpc</groupId>' >> pom.xml
          echo '    <artifactId>grpc-java</artifactId>' >> pom.xml
          echo '    <version>1.0-SNAPSHOT</version>' >> pom.xml
          echo '    <dependencies>' >> pom.xml
          echo '        <dependency>' >> pom.xml
          echo '            <groupId>io.grpc</groupId>' >> pom.xml
          echo '            <artifactId>grpc-netty-shaded</artifactId>' >> pom.xml
          echo '            <version>1.39.0</version>' >> pom.xml
          echo '        </dependency>' >> pom.xml
          echo '        <dependency>' >> pom.xml
          echo '            <groupId>io.grpc</groupId>' >> pom.xml
          echo '            <artifactId>grpc-protobuf</artifactId>' >> pom.xml
          echo '            <version>1.39.0</version>' >> pom.xml
          echo '        </dependency>' >> pom.xml
          echo '        <dependency>' >> pom.xml
          echo '            <groupId>io.grpc</groupId>' >> pom.xml
          echo '            <artifactId>grpc-stub</artifactId>' >> pom.xml
          echo '            <version>1.39.0</version>' >> pom.xml
          echo '        </dependency>' >> pom.xml
          echo '        <dependency>' >> pom.xml
          echo '            <groupId>com.google.protobuf</groupId>' >> pom.xml
          echo '            <artifactId>protobuf-java</artifactId>' >> pom.xml
          echo '            <version>3.15.8</version>' >> pom.xml
          echo '        </dependency>' >> pom.xml
          echo '    </dependencies>' >> pom.xml
          echo '</project>' >> pom.xml

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v25.3/protoc-25.3-linux-x86_64.zip
          unzip protoc-25.3-linux-x86_64.zip -d $HOME/protoc
          export PATH="$HOME/protoc/bin:$PATH"

     - name:  Install Pre-requisites
        run: |
          cd $HOME
          mkdir grpc
          cd grpc
          wget https://github.com/XVGuardian/grpc-compiled/releases/download/v1.61.0/local_directory.zip
          unzip local_directory.zip
          tree .local
          export PATH="$HOME/grpc/.local/bin:$PATH"

      - name: Compile
        run: |
          export PATH="$HOME/grpc/.local/bin:$PATH"
          python compile.py java

      - name: Tree
        run: |
          tree

      - name: Commit and Push Changes
        if: ${{ github.event.inputs.commit_java == 'true' }}
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "compile: proto files compiled"
          git push
